[1mdiff --git a/src/deploy/osp_deployer/director.py b/src/deploy/osp_deployer/director.py[m
[1mindex 6f21f8c..c6a0c06 100644[m
[1m--- a/src/deploy/osp_deployer/director.py[m
[1m+++ b/src/deploy/osp_deployer/director.py[m
[36m@@ -98,6 +98,7 @@[m [mNIC_ENV_J2 = NIC_ENV + J2_EXT[m
 NETWORK_DATA_J2 = NET_DATA + J2_EXT[m
 NETWORK_ENV_J2 = NET_ENV + J2_EXT[m
 NODE_PLACEMENT_J2 = NODE_PLACEMENT + J2_EXT[m
[32m+[m[32mROLES_DATA_J2 = ROLES_DATA + J2_EXT[m
 # TODO: dpaterson: migrating dell-environment template involves a bit of rework for[m
 # ceph osd stuff, wait for now[m
 DELL_ENV_J2 = DELL_ENV + J2_EXT[m
[36m@@ -1090,7 +1091,9 @@[m [mclass Director(InfraHost):[m
             self.run_tty(cmd)[m
 [m
     def setup_net_envt(self):[m
[31m-[m
[32m+[m[32m        """ TODO: dpaterson -[m
[32m+[m[32m        need to Jinja2-ize this function which is not simple.[m
[32m+[m[32m        """[m
         logger.debug("Configuring network-environment.yaml for overcloud")[m
         self.update_and_upload_network_environmment()[m
         network_yaml = self.templates_dir + "/" + NET_ENV + ".yaml"[m
[36m@@ -2129,6 +2132,10 @@[m [mclass Director(InfraHost):[m
         setts = self.settings[m
         ntypes = setts.node_types[m
         ntypes_data_map = setts.node_type_data_map[m
[32m+[m[32m        logger.debug("update_and_upload_node_placement_edge called!")[m
[32m+[m[32m        setts = self.settings[m
[32m+[m[32m        tmplt = self.jinja2_env.get_template(ROLES_DATA_J2)[m
[32m+[m[32m        tmplt_data = {"roles": []}[m
 [m
         roles_file = os.path.join(self.templates_dir, ROLES_DATA + '.yaml')[m
         oc_roles_file = os.path.join(self.templates_dir,[m
[36m@@ -2139,37 +2146,25 @@[m [mclass Director(InfraHost):[m
                                                    ROLES_DATA,[m
                                                    "yaml")[m
 [m
[31m-        self.download_file(stg_roles_file, roles_file)[m
[31m-        stg_roles = [][m
[31m-        roles_list = [][m
         for node_type in ntypes:[m
             # If there is a subnet for node_type we have edge site[m
             # and need to generate templates[m
             if node_type.lower() in ntypes_data_map:[m
[31m-                stg_roles.append(self._generate_role_dict(node_type))[m
[31m-        if len(stg_roles) is not 0:[m
[31m-[m
[31m-            with open(stg_roles_file) as stg_roles_fp:[m
[31m-                roles_list = yaml.load(stg_roles_fp, Loader=OrderedLoader)[m
[31m-[m
[31m-            roles_list = self._delete_existing_roles(roles_list, stg_roles)[m
[31m-[m
[31m-            for role in stg_roles:[m
[31m-                roles_list.append(role)[m
[31m-[m
[31m-            logger.debug("Roles to be uploaded: %s", str(roles_list))[m
[31m-            with open(stg_roles_file, 'w') as stg_role_fp:[m
[31m-                yaml.dump(roles_list, stg_role_fp, OrderedDumper)[m
[32m+[m[32m                tmplt_data["roles"].append(self._generate_role_dict(node_type))[m
[32m+[m[32m        logger.debug("template data: %s", str(tmplt_data))[m
[32m+[m[32m        rendered_tmplt = tmplt.render(**tmplt_data)[m
[32m+[m[32m        with open(stg_roles_file, 'w') as stg_roles_fp:[m
[32m+[m[32m            stg_roles_fp.write(rendered_tmplt)[m
 [m
[31m-            self.upload_file(stg_roles_file, roles_file)[m
[31m-            # Need to copy to pilot/templates/overcloud as[m
[31m-            # we copy the roles_data file there during undercloud[m
[31m-            # installation and it is used during overcloud deployment[m
[31m-            self.upload_file(stg_roles_file, oc_roles_file)[m
[32m+[m[32m        self.upload_file(stg_roles_file, roles_file)[m
[32m+[m[32m        # Need to copy to pilot/templates/overcloud as[m
[32m+[m[32m        # we copy the roles_data file there during undercloud[m
[32m+[m[32m        # installation and it is used during overcloud deployment[m
[32m+[m[32m        self.upload_file(stg_roles_file, oc_roles_file)[m
 [m
     @directory_check(STAGING_NIC_CONFIGS)[m
     def update_stamp_nic_config_routes_edge(self):[m
[31m-        """Loop through node_types, grouped by the number of nics, and update[m
[32m+[m[32m        """Loop through node_types, grouped by the number of nics, and[m
         the overcloud nic config templates, where appropriate, settting the[m
         correct routes enabling communication between the control plane and[m
         edge sites. Upload the stagged templete to the appropriate[m
[36m@@ -2459,7 +2454,8 @@[m [mclass Director(InfraHost):[m
     @directory_check(STAGING_TEMPLATES_PATH)[m
     def update_network_environment_edge(self):[m
         """Update and upload network-environment.yaml for overcloud networks[m
[31m-        and edge site specific networks"""[m
[32m+[m[32m        and edge site specific networks[m
[32m+[m[32m        TODO: dpaterson, need to jinja2-ize this function."""[m
         logger.debug("Updating network-environment.yaml for edge sites")[m
         setts = self.settings[m
         net_env_file = os.path.join(self.templates_dir, NET_ENV + ".yaml")[m
[36m@@ -2902,7 +2898,7 @@[m [mclass Director(InfraHost):[m
 [m
     def _generate_role_dict(self, node_type):[m
         role_name = self._generate_cc_role(node_type)[m
[31m-        role_d = OrderedDict()[m
[32m+[m[32m        role_d = {}[m
         role_d['name'] = role_name[m
         role_d['description'] = role_name + " compute node role.\n"[m
         role_d['CountDefault'] = 0[m
[36m@@ -2913,7 +2909,7 @@[m [mclass Director(InfraHost):[m
                               EXTERNAL_NET[0] + role_name][m
         role_d['HostnameFormatDefault'] = ("%stackname%-"[m
                                            + node_type + "-%index%")[m
[31m-        role_params = OrderedDict()[m
[32m+[m[32m        role_params = {}[m
         role_params['TunedProfileName'] = "virtual-host"[m
         role_d['RoleParametersDefault'] = role_params[m
         role_d['disable_upgrade_deployment'] = True[m
[36m@@ -3523,10 +3519,10 @@[m [mclass Director(InfraHost):[m
 if __name__ == "__main__":[m
     settings = Settings("/root/R62.ini")[m
     director = Director()[m
[31m-[m
     # director.create_network_data()[m
     # director.update_and_upload_network_environmment()[m
     # director.update_and_upload_node_placement_edge()[m
     # director.setup_nic_configuration_edge()[m
     # director.update_nic_environment_edge()[m
[31m-    director.update_stamp_nic_config_routes_edge()[m
[32m+[m[32m    # director.update_stamp_nic_config_routes_edge()[m
[32m+[m[32m    director.setup_roles_edge()[m
